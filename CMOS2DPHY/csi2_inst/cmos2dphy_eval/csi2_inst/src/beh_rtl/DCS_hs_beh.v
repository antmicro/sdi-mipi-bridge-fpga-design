// DCS_hs_beh.v generated by Lattice IP Model Creator version 1
// created on Mon, Jan 30, 2017 10:09:06 AM
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top

`timescale 1 ns / 100 ps
module DCS_hs 



#(
parameter                      DAT_WIDTH = 32,
parameter                      CMDCNT_WIDTH = 9,

parameter                      DLY = 225,


parameter                      TINIT_VALUE = 20,
parameter                      TX_FREQ_TGT = 150,

`ifdef TX_GEAR_8 // ---------------------------------

`ifdef  NUM_TX_LANE_4  
parameter                      WORD_CNT    =  16'd165,

`endif

`ifdef  NUM_TX_LANE_2
parameter                      WORD_CNT    =  16'd278,

`endif

`ifdef  NUM_TX_LANE_1
parameter                      WORD_CNT    =  16'd504,

`endif //LANE

`endif //TX_GEAR_8

`ifdef TX_GEAR_16 //---------------------------------

`ifdef  NUM_TX_LANE_4    
parameter                      WORD_CNT    =  16'd109,

`endif

`ifdef  NUM_TX_LANE_2
parameter                      WORD_CNT    =  16'd170,

`endif

`ifdef  NUM_TX_LANE_1
parameter                      WORD_CNT    =  16'd291,

`endif //LANE                     

`endif //TX_GEAR_16---------------------------------- 
parameter                      TX_GEAR = 16                                   
)




(

    input                          d_hs_rdy_i,
    output reg                     d_hs_en_o,

    input                          reset_n,
    input                          clk,
    input      [DAT_WIDTH:0]       q_hs_data_d, 
    output reg [CMDCNT_WIDTH-1:0]  hs_cmd_cnt,
    output reg                     hs_en  ,
    output reg [DAT_WIDTH-1:0]     q_hs_data ,
    output reg                     hs_dcs_done
);
localparam  BYTECLK_PS      = 1000000/TX_FREQ_TGT;
localparam  kd7f496 = BYTECLK_PS/2;
localparam  vvd25a9          = 4000000/(TX_FREQ_TGT*TX_GEAR);
localparam  vxb538b = (TX_GEAR==16) + ((60000+vvd25a9+kd7f496)/BYTECLK_PS < 2 ? 2 : ((60000+vvd25a9+kd7f496)/BYTECLK_PS));
reg [DAT_WIDTH-1:0]            ps76869;
reg                            qvb434a;
wire                           yza1a54;
reg  [15:0]                    cbd2a4;
reg                            vi69524;
reg  [15:0]                    nr4a923;
wire                           gb5491e;
reg                            gda48f4;
reg                            mg247a4;
reg                            oh23d21;
reg  [4:0]                     do1e90d;
reg                            psf486b;
wire                           uxa435b;
reg [2:0]                      ym21add;
reg [2:0]                      cbd6e8;
reg                            xj6b744;
reg                            yx5ba26;
reg                            dzdd135;
reg [15:0]                     qte89af;
parameter DCS_IDLE          = 3'd0,          DCS_LDSYNCPATTERN = 3'd1,          DCS_SYNCPATTERN   = 3'd2,          DCS_DATA          = 3'd3,          DCS_TRAIL         = 3'd4,          DCS_DELAY         = 3'd5,          DCS_DONE          = 3'd6;
reg th6bec7;
reg [DAT_WIDTH : 0] psfb1fe;
reg [DAT_WIDTH - 1 : 0] hbc7f9e;
reg fc3fcf6;
reg rgfe7b2;
reg [15 : 0] pff3d93;
reg rv9ec9e;
reg [15 : 0] zxf64f7;
reg vkb27bf;
reg pu93dfb;
reg fp9efdb;
reg gbf7edf;
reg [4 : 0] xlbf6fc;
reg jcfb7e7;
reg aydbf3b;
reg [2 : 0] rgdf9d9;
reg [2 : 0] zxfcecb;
reg ale765f;
reg qi3b2fc;
reg gbd97e1;
reg [15 : 0] mecbf0d;
reg [2047:0] zx5f868;
wire [20:0] ldfc347;

localparam nee1a3e = 21,sjd1f2 = 32'hfdffc68b;
localparam [31:0] su68f94 = sjd1f2;
localparam uk3e502 = sjd1f2 & 4'hf;
localparam [11:0] tj9408c = 'h7ff;
wire [(1 << uk3e502) -1:0] gd233f;
reg [nee1a3e-1:0] ri8cfea;
reg [uk3e502-1:0] do3fa99 [0:1];
reg [uk3e502-1:0] suea654;
reg ic532a0;
integer vk99500;
integer dmca803;



























assign uxa435b = psfb1fe[DAT_WIDTH];


always @(posedge clk or negedge reset_n) begin  if (!reset_n) begin  cbd2a4 <= TINIT_VALUE;   end  else begin	if (!rv9ec9e)  cbd2a4 <= pff3d93 - 1;	else  cbd2a4 <= 0;  end
end

always @(posedge clk or negedge reset_n) begin  if (!reset_n) begin  vi69524    <= 1'b0;  end  else begin    if (pff3d93 == 1)    vi69524 <= 1'b1;	else  vi69524 <= rv9ec9e;  end
end
always @(posedge clk or negedge reset_n) begin  if (!reset_n) begin    nr4a923 <= DLY;  end  else begin    if (qi3b2fc)      nr4a923 <= DLY;    else if (gbd97e1)      nr4a923 <= zxf64f7 - 1;    else      nr4a923 <= zxf64f7;  end
end

assign gb5491e = zxf64f7 == 16'h0000;

always @(posedge clk or negedge reset_n) begin  if (!reset_n) begin    hs_cmd_cnt  <= {CMDCNT_WIDTH{1'b0}};  end  else begin    if (ale765f)      hs_cmd_cnt <= hs_cmd_cnt + 1;    else      hs_cmd_cnt <= hs_cmd_cnt;  end
end

always @(posedge clk or negedge reset_n) begin  if (!reset_n) begin    hs_en  <= 1'b0;  end  else begin      hs_en  <= fp9efdb || gbf7edf;
  end
end


always @(posedge clk or negedge reset_n) begin  if (!reset_n) begin    do1e90d  <= vxb538b;  end  else begin    if (jcfb7e7)      do1e90d  <= vxb538b;    else if (gbf7edf && !(xlbf6fc == 0))      do1e90d <= xlbf6fc - 1;    else  if (xlbf6fc == 0)      do1e90d <= xlbf6fc;  end
end






always @(posedge clk or negedge reset_n) begin  if (!reset_n) begin    gda48f4  <= 1'b0;  end  else begin      gda48f4  <= hs_cmd_cnt> WORD_CNT - 1;  end
end



always @* begin : os4c2d6  xj6b744  = 1'b0;  yx5ba26  = 1'b0;  mg247a4  = 1'b0;  oh23d21 = 1'b0;  psf486b = 1'b0;  dzdd135 = 1'b0;  hs_dcs_done  = 1'b0;  cbd6e8     = rgdf9d9;
  qvb434a = 0;
  case (rgdf9d9)    DCS_IDLE : begin


        qvb434a = 1;        if (th6bec7)      
          if (hs_cmd_cnt==0)            cbd6e8    = DCS_LDSYNCPATTERN;          else            cbd6e8    = DCS_SYNCPATTERN;

        else          cbd6e8    = DCS_IDLE;
    end
        DCS_LDSYNCPATTERN : begin      xj6b744   = 1'b1;      cbd6e8      = DCS_SYNCPATTERN;    end
          DCS_SYNCPATTERN : begin      yx5ba26   = 1'b1;      xj6b744   = 1'b1;      psf486b  = 1'b1;      cbd6e8      = DCS_DATA;    end
    DCS_DATA : begin      mg247a4   = 1'b1;      xj6b744   = !aydbf3b;      if (aydbf3b) begin        cbd6e8    = DCS_DELAY;      end      else begin        cbd6e8 = DCS_DATA;      end    end
                DCS_TRAIL: begin        oh23d21 = 1'b1;        if (xlbf6fc == 1) begin          cbd6e8   = DCS_DELAY;        end        else begin          cbd6e8   = DCS_TRAIL;        end    end
        DCS_DELAY: begin      dzdd135  = 1'b1;


      if (!th6bec7 & !pu93dfb) begin        cbd6e8 = DCS_IDLE;      end

      else if (!th6bec7 & pu93dfb) begin        cbd6e8 = DCS_DONE;      end   end
            DCS_DONE : begin      hs_dcs_done = 1'b1;    end  endcase
end

always @(posedge clk or negedge reset_n) begin  if (!reset_n) begin    ym21add  <= DCS_IDLE;  end  else begin    ym21add <= zxfcecb;  end
end





 always @(posedge clk or negedge reset_n) begin   if (!reset_n) begin     ps76869  <= {DAT_WIDTH{1'b0}};     q_hs_data    <= {DAT_WIDTH{1'b0}};     d_hs_en_o    <= 0;   end   else begin            ps76869 <=  fp9efdb ? psfb1fe[DAT_WIDTH-1:0] : hbc7f9e[DAT_WIDTH-1:0];     q_hs_data   <= hbc7f9e;     d_hs_en_o   <= fc3fcf6;   end end





always@* begin th6bec7<=ldfc347[0];psfb1fe<={q_hs_data_d>>1,ldfc347[1]};hbc7f9e<={ps76869>>1,ldfc347[2]};fc3fcf6<=ldfc347[3];rgfe7b2<=ldfc347[4];pff3d93<={cbd2a4>>1,ldfc347[5]};rv9ec9e<=ldfc347[6];zxf64f7<={nr4a923>>1,ldfc347[7]};vkb27bf<=ldfc347[8];pu93dfb<=ldfc347[9];fp9efdb<=ldfc347[10];gbf7edf<=ldfc347[11];xlbf6fc<={do1e90d>>1,ldfc347[12]};jcfb7e7<=ldfc347[13];aydbf3b<=ldfc347[14];rgdf9d9<={ym21add>>1,ldfc347[15]};zxfcecb<={cbd6e8>>1,ldfc347[16]};ale765f<=ldfc347[17];qi3b2fc<=ldfc347[18];gbd97e1<=ldfc347[19];mecbf0d<={qte89af>>1,ldfc347[20]};end
always@* begin zx5f868[2047]<=q_hs_data_d[0];zx5f868[2046]<=ps76869[0];zx5f868[2044]<=qvb434a;zx5f868[2040]<=yza1a54;zx5f868[2032]<=cbd2a4[0];zx5f868[2017]<=vi69524;zx5f868[1987]<=nr4a923[0];zx5f868[1926]<=gb5491e;zx5f868[1805]<=gda48f4;zx5f868[1679]<=cbd6e8[0];zx5f868[1562]<=mg247a4;zx5f868[1310]<=xj6b744;zx5f868[1144]<=dzdd135;zx5f868[1076]<=oh23d21;zx5f868[1023]<=d_hs_rdy_i;zx5f868[839]<=ym21add[0];zx5f868[572]<=yx5ba26;zx5f868[419]<=uxa435b;zx5f868[240]<=qte89af[0];zx5f868[209]<=psf486b;zx5f868[104]<=do1e90d[0];end         assign gd233f = zx5f868,ldfc347 = ri8cfea; initial begin vk99500 = $fopen(".fred"); $fdisplay( vk99500, "%3h\n%3h", (su68f94 >> 4) & tj9408c, (su68f94 >> (uk3e502+4)) & tj9408c ); $fclose(vk99500); $readmemh(".fred", do3fa99); end always @ (gd233f) begin suea654 = do3fa99[1]; for (dmca803=0; dmca803<nee1a3e; dmca803=dmca803+1) begin ri8cfea[dmca803] = gd233f[suea654]; ic532a0 = ^(suea654 & do3fa99[0]); suea654 = {suea654, ic532a0}; end end 
endmodule

