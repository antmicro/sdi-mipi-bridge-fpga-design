// dci_wrapper_beh.v generated by Lattice IP Model Creator version 1
// created on Mon, Jan 30, 2017 10:09:02 AM
// Copyright(c) 2007 Lattice Semiconductor Corporation. All rights reserved
// obfuscator_exe version 1.mar0807

// top
















































`timescale 1 ns / 100 ps
module dci_wrapper #(
  parameter DATA_WIDTH = 16,  parameter GEAR_16    = 1'b0,  parameter CN         = 0,  parameter CM         = 0,  parameter CO         = 0
)
(
  
  input             refclk,
  input             reset_n,
  
  
  inout             clk_p_o,
  inout             clk_n_o,
`ifdef NUM_TX_LANE_4
  inout             d3_p_o,
  inout             d3_n_o,
  inout             d2_p_o,
  inout             d2_n_o,
  inout             d1_p_o,
  inout             d1_n_o,
  inout             d0_p_io,
  inout             d0_n_io,
`endif
`ifdef NUM_TX_LANE_3
  inout             d2_p_o,
  inout             d2_n_o,
  inout             d1_p_o,
  inout             d1_n_o,
  inout             d0_p_io,
  inout             d0_n_io,
`endif
`ifdef NUM_TX_LANE_2
  inout             d1_p_o,
  inout             d1_n_o,
  inout             d0_p_io,
  inout             d0_n_io,
`endif
`ifdef NUM_TX_LANE_1
  inout             d0_p_io,
  inout             d0_n_io,
`endif


  
  output            txbyte_clkhs_o,
  output            pll_lock_o,
  
  input             txclk_hsen_i,
  input             txclk_hsgate_i,
  input             pd_dphy_i,

  
  
  
  

`ifdef NUM_TX_LANE_4
  input [DATA_WIDTH-1:0]  dl3_txdata_hs_i,
  input [DATA_WIDTH-1:0]  dl2_txdata_hs_i,
  input [DATA_WIDTH-1:0]  dl1_txdata_hs_i,
  input [DATA_WIDTH-1:0]  dl0_txdata_hs_i,
  input                   dl3_txdata_hs_en_i,
  input                   dl2_txdata_hs_en_i,
  input                   dl1_txdata_hs_en_i,
  input                   dl0_txdata_hs_en_i,
`endif
`ifdef NUM_TX_LANE_3
  input [DATA_WIDTH-1:0]  dl2_txdata_hs_i,
  input [DATA_WIDTH-1:0]  dl1_txdata_hs_i,
  input [DATA_WIDTH-1:0]  dl0_txdata_hs_i,
  input                   dl2_txdata_hs_en_i,
  input                   dl1_txdata_hs_en_i,
  input                   dl0_txdata_hs_en_i,
`endif
`ifdef NUM_TX_LANE_2
  input [DATA_WIDTH-1:0]  dl1_txdata_hs_i,
  input [DATA_WIDTH-1:0]  dl0_txdata_hs_i,
  input                   dl1_txdata_hs_en_i,
  input                   dl0_txdata_hs_en_i,
`endif
`ifdef NUM_TX_LANE_1
  input [DATA_WIDTH-1:0]  dl0_txdata_hs_i,
  input                   dl0_txdata_hs_en_i,
`endif

  
  input      txclk_lp_p_i,
  input      txclk_lp_n_i,
  input      clk_lpen_i,
  input      lp_direction_i,

`ifdef LP_4
  input      dl3_txdata_lp_p_i,
  input      dl3_txdata_lp_n_i,
  input      dl2_txdata_lp_p_i,
  input      dl2_txdata_lp_n_i,
  input      dl1_txdata_lp_p_i,
  input      dl1_txdata_lp_n_i,
  input      dl0_txdata_lp_p_i,
  input      dl0_txdata_lp_n_i,
  input      dl3_txdata_lp_en_i,
  input      dl2_txdata_lp_en_i,
  input      dl1_txdata_lp_en_i,
  input      dl0_txdata_lp_en_i,
`endif
`ifdef LP_3
  input      dl2_txdata_lp_p_i,
  input      dl2_txdata_lp_n_i,
  input      dl1_txdata_lp_p_i,
  input      dl1_txdata_lp_n_i,
  input      dl0_txdata_lp_p_i,
  input      dl0_txdata_lp_n_i,
  input      dl2_txdata_lp_en_i,
  input      dl1_txdata_lp_en_i,
  input      dl0_txdata_lp_en_i,
`endif
`ifdef LP_2
  input      dl1_txdata_lp_p_i,
  input      dl1_txdata_lp_n_i,
  input      dl0_txdata_lp_p_i,
  input      dl0_txdata_lp_n_i,
  input      dl1_txdata_lp_en_i,
  input      dl0_txdata_lp_en_i,
`endif
`ifdef LP_1
  input      dl0_txdata_lp_p_i,
  input      dl0_txdata_lp_n_i,
  input      dl0_txdata_lp_en_i,
`endif

  
  output     rxclk_lp_p_o,
  output     rxclk_lp_n_o,
  output     dl0_rxdata_lp_p_o,
  output     dl0_rxdata_lp_n_o
);

`ifdef BYPASS_TINIT

`else

`endif

`ifdef NUM_TX_LANE_4

`endif

`ifdef NUM_TX_LANE_3

`endif

`ifdef NUM_TX_LANE_2

`endif

`ifdef NUM_TX_LANE_1

`endif

`ifdef NUM_TX_LANE_1

`else

`endif	   

`ifdef NUM_TX_LANE_1

`else

`endif															

`ifdef NUM_TX_LANE_4

`endif

`ifdef NUM_TX_LANE_3

`endif  

`ifdef NUM_TX_LANE_2

`endif

`ifdef NUM_TX_LANE_1

`endif

`ifdef NUM_TX_LANE_4

`endif

`ifdef NUM_TX_LANE_3

`endif

`ifdef NUM_TX_LANE_2

`endif	

`ifdef NUM_TX_LANE_1

`endif													

`ifdef NUM_TX_LANE_4

`else

`endif

`ifdef NUM_TX_LANE_4

`else

`endif														
reg refclk_split;
reg icef20f;
reg ho79078;
reg jpc83c2;
reg al41e16;
reg ecf0b5;
reg os785a9;
reg nrc2d48;
reg db16a46;
reg [2047:0] ntb5237;
wire [8:0] yma91be;


`ifdef BYPASS_TINIT

`else

`endif

`ifdef NUM_TX_LANE_4

`endif

`ifdef NUM_TX_LANE_3

`endif

`ifdef NUM_TX_LANE_2

`endif

`ifdef NUM_TX_LANE_1

`endif

`ifdef NUM_TX_LANE_1

`else

`endif	   

`ifdef NUM_TX_LANE_1

`else

`endif															

`ifdef NUM_TX_LANE_4

`endif

`ifdef NUM_TX_LANE_3

`endif  

`ifdef NUM_TX_LANE_2

`endif

`ifdef NUM_TX_LANE_1

`endif

`ifdef NUM_TX_LANE_4

`endif

`ifdef NUM_TX_LANE_3

`endif

`ifdef NUM_TX_LANE_2

`endif	

`ifdef NUM_TX_LANE_1

`endif													

`ifdef NUM_TX_LANE_4

`else

`endif

`ifdef NUM_TX_LANE_4

`else

`endif														

localparam jc48df1 = 9,cm46f8b = 32'hfdffc68b;
localparam [31:0] tj37c58 = cm46f8b;
localparam byf1635 = cm46f8b & 4'hf;
localparam [11:0] dm58d57 = 'h7ff;
wire [(1 << byf1635) -1:0] tw355d4;
reg [jc48df1-1:0] by57517;
reg [byf1635-1:0] ykd45d6 [0:1];
reg [byf1635-1:0] yz1758b;
reg vxbac5c;
integer qtd62e6;
integer irb1734;


`ifdef BYPASS_TINIT


`else


`endif


`ifdef NUM_TX_LANE_4


`endif


`ifdef NUM_TX_LANE_3


`endif


`ifdef NUM_TX_LANE_2


`endif


`ifdef NUM_TX_LANE_1


`endif


`ifdef NUM_TX_LANE_1


`else


`endif	   


`ifdef NUM_TX_LANE_1


`else


`endif															


`ifdef NUM_TX_LANE_4


`endif


`ifdef NUM_TX_LANE_3


`endif  


`ifdef NUM_TX_LANE_2


`endif


`ifdef NUM_TX_LANE_1


`endif


`ifdef NUM_TX_LANE_4


`endif


`ifdef NUM_TX_LANE_3


`endif


`ifdef NUM_TX_LANE_2


`endif	


`ifdef NUM_TX_LANE_1


`endif													


`ifdef NUM_TX_LANE_4


`else


`endif


`ifdef NUM_TX_LANE_4


`else


`endif														


MIPIDPHYA # (  .HSEL        (1),  .HS_16BIT_EN (GEAR_16),  .CN          (CN),  .CM          (CM),  .CO          (CO),  .PLL_TST     (9),  .ENP_DESER   (0)
)
ana4c39 (  .CKP          (clk_p_o),  .CKN          (clk_n_o),  .CLKHSBYTE    (),  .CLKRXHSEN    (1'b0),  .CLKDRXLPP    (),  .CLKRXLPEN    (1'b0),  .CLKDRXLPN    (),  .CLKCDEN      (1'b0),
  .CLKDCDN      (),
  .CLKDTXLPP    (txclk_lp_p_i),  .CLKTXLPEN    (clk_lpen_i),  .CLKDTXLPN    (txclk_lp_n_i),
  .CLKTXHSEN    (txclk_hsen_i),  .CLKTXHSGATE  (txclk_hsgate_i),
  .CLKTXHSPD    (1'b0),  .CLKDRXHS     (),
  .HSBYTECLKS   (txbyte_clkhs_o),  .LBEN         (1'b0),



`ifdef BYPASS_TINIT
  .PDDPHY       (pd_dphy_i),

`else
  .PDDPHY       (!pll_lock_o | pd_dphy_i),


`endif
  .PDBIAS       (1'b0),  .PDCKG        (1'b0),  .CLKREF       (refclk),  .LOCK         (pll_lock_o),
  .PDPLL        (~reset_n),




`ifdef NUM_TX_LANE_4
  .DP0          (d0_p_io),  .DP1          (d1_p_o),  .DP2          (d2_p_o),  .DP3          (d3_p_o),
  .DN0          (d0_n_io),  .DN1          (d1_n_o),  .DN2          (d2_n_o),  .DN3          (d3_n_o),

`endif



`ifdef NUM_TX_LANE_3
  .DP0          (d0_p_io),  .DP1          (d1_p_o),  .DP2          (d2_p_o),  .DP3          (),
  .DN0          (d0_n_io),  .DN1          (d1_n_o),  .DN2          (d2_n_o),  .DN3          (),


`endif



`ifdef NUM_TX_LANE_2
  .DP0          (d0_p_io),  .DP1          (d1_p_o),  .DP2          (),  .DP3          (),
  .DN0          (d0_n_io),  .DN1          (d1_n_o),  .DN2          (),  .DN3          (),


`endif



`ifdef NUM_TX_LANE_1
  .DP0          (d0_p_io),  .DP1          (),  .DP2          (),  .DP3          (),
  .DN0          (d0_n_io),  .DN1          (),  .DN2          (),  .DN3          (),


`endif

  .D0DRXLPP     (),  .D0RXLPEN     (1'b0),
  .D0DRXLPN     (),  .D0DCDP       (),
  .D0CDEN       (1'b0),
  .D0DCDN       (),

  .D0DTXLPP     (dl0_txdata_lp_p_i),
  .D0TXLPEN     (dl0_txdata_lp_en_i),
  .D0DTXLPN     (dl0_txdata_lp_n_i),
  .D0RXHSEN     (1'b0),

  .D0HSRXDATA15 (),  .D0HSRXDATA14 (),  .D0HSRXDATA13 (),  .D0HSRXDATA12 (),  .D0HSRXDATA11 (),  .D0HSRXDATA10 (),  .D0HSRXDATA9  (),  .D0HSRXDATA8  (),  .D0HSRXDATA7  (),  .D0HSRXDATA6  (),  .D0HSRXDATA5  (),
  .D0HSRXDATA4  (),  .D0HSRXDATA3  (),  .D0HSRXDATA2  (),  .D0HSRXDATA1  (),  .D0SYNC       (),
  .D0ERRSYNC    (),
  .D0NOSYNC     (),  .D0HSDESEREN  (1'b1),
  .D0TXHSEN     (dl0_txdata_hs_en_i),
  .D0HSTXDATA15 (dl0_txdata_hs_i[DATA_WIDTH-1]),  .D0HSTXDATA14 (dl0_txdata_hs_i[DATA_WIDTH-2]),  .D0HSTXDATA13 (dl0_txdata_hs_i[DATA_WIDTH-3]),  .D0HSTXDATA12 (dl0_txdata_hs_i[DATA_WIDTH-4]),  .D0HSTXDATA11 (dl0_txdata_hs_i[DATA_WIDTH-5]),  .D0HSTXDATA10 (dl0_txdata_hs_i[DATA_WIDTH-6]),  .D0HSTXDATA9  (dl0_txdata_hs_i[DATA_WIDTH-7]),  .D0HSTXDATA8  (dl0_txdata_hs_i[DATA_WIDTH-8]),  .D0HSTXDATA7  (dl0_txdata_hs_i[DATA_WIDTH-9]),  .D0HSTXDATA6  (dl0_txdata_hs_i[DATA_WIDTH-10]),  .D0HSTXDATA5  (dl0_txdata_hs_i[DATA_WIDTH-11]),
  .D0HSTXDATA4  (dl0_txdata_hs_i[DATA_WIDTH-12]),  .D0HSTXDATA3  (dl0_txdata_hs_i[DATA_WIDTH-13]),  .D0HSTXDATA2  (dl0_txdata_hs_i[DATA_WIDTH-14]),  .D0HSTXDATA1  (dl0_txdata_hs_i[DATA_WIDTH-15]),  .D0HSTXDATA0  (dl0_txdata_hs_i[DATA_WIDTH-16]),

  .D0HSSEREN    (1'b1),
  .D0TXHSPD     (1'b0),
  .D0DRXHS      (),

  .D1DRXLPP     (),  .D1RXLPEN     (1'b0),
  .D1DRXLPN     (),  .D1DCDP       (),
  .D1CDEN       (1'b0),
  .D1DCDN       (),



`ifdef NUM_TX_LANE_1
  .D1DTXLPP     (1'b0),
  .D1TXLPEN     (1'b0),
  .D1DTXLPN     (1'b0),


`else
  .D1DTXLPP     (dl1_txdata_lp_p_i),
  .D1TXLPEN     (dl1_txdata_lp_en_i),
  .D1DTXLPN     (dl1_txdata_lp_n_i),


`endif	   
  .D1RXHSEN     (1'b0),
  .D1HSRXDATA15 (),  .D1HSRXDATA14 (),  .D1HSRXDATA13 (),  .D1HSRXDATA12 (),  .D1HSRXDATA11 (),  .D1HSRXDATA10 (),  .D1HSRXDATA9  (),  .D1HSRXDATA8  (),  .D1HSRXDATA7  (),  .D1HSRXDATA6  (),  .D1HSRXDATA5  (),
  .D1HSRXDATA4  (),  .D1HSRXDATA3  (),  .D1HSRXDATA2  (),  .D1HSRXDATA1  (),  .D1HSRXDATA0  (),
  .D1SYNC       (),
  .D1ERRSYNC    (),
  .D1NOSYNC     (),

`ifdef NUM_TX_LANE_1
  .D1HSDESEREN  (1'b0),
  .D1TXHSEN     (1'b0),
  .D1HSTXDATA15 (1'b0),  .D1HSTXDATA14 (1'b0),  .D1HSTXDATA13 (1'b0),  .D1HSTXDATA12 (1'b0),  .D1HSTXDATA11 (1'b0),  .D1HSTXDATA10 (1'b0),  .D1HSTXDATA9  (1'b0),  .D1HSTXDATA8  (1'b0),  .D1HSTXDATA7  (1'b0),  .D1HSTXDATA6  (1'b0),  .D1HSTXDATA5  (1'b0),
  .D1HSTXDATA4  (1'b0),  .D1HSTXDATA3  (1'b0),  .D1HSTXDATA2  (1'b0),  .D1HSTXDATA1  (1'b0),  .D1HSTXDATA0  (1'b0),
  .D1HSSEREN    (1'b0),

`else
  .D1HSDESEREN  (1'b1),
  .D1TXHSEN     (dl1_txdata_hs_en_i),
  .D1HSTXDATA15 (dl1_txdata_hs_i[DATA_WIDTH-1]),  .D1HSTXDATA14 (dl1_txdata_hs_i[DATA_WIDTH-2]),  .D1HSTXDATA13 (dl1_txdata_hs_i[DATA_WIDTH-3]),  .D1HSTXDATA12 (dl1_txdata_hs_i[DATA_WIDTH-4]),  .D1HSTXDATA11 (dl1_txdata_hs_i[DATA_WIDTH-5]),  .D1HSTXDATA10 (dl1_txdata_hs_i[DATA_WIDTH-6]),  .D1HSTXDATA9  (dl1_txdata_hs_i[DATA_WIDTH-7]),  .D1HSTXDATA8  (dl1_txdata_hs_i[DATA_WIDTH-8]),  .D1HSTXDATA7  (dl1_txdata_hs_i[DATA_WIDTH-9]),  .D1HSTXDATA6  (dl1_txdata_hs_i[DATA_WIDTH-10]),  .D1HSTXDATA5  (dl1_txdata_hs_i[DATA_WIDTH-11]),
  .D1HSTXDATA4  (dl1_txdata_hs_i[DATA_WIDTH-12]),  .D1HSTXDATA3  (dl1_txdata_hs_i[DATA_WIDTH-13]),  .D1HSTXDATA2  (dl1_txdata_hs_i[DATA_WIDTH-14]),  .D1HSTXDATA1  (dl1_txdata_hs_i[DATA_WIDTH-15]),  .D1HSTXDATA0  (dl1_txdata_hs_i[DATA_WIDTH-16]),
  .D1HSSEREN    (1'b1),

`endif															
  .D1TXHSPD     (1'b0),
  .D1DRXHS      (),
  .D2DRXLPP     (),  .D2RXLPEN     (1'b0),
  .D2DRXLPN     (),  .D2DCDP       (),
  .D2CDEN       (1'b0),
  .D2DCDN       (),



`ifdef NUM_TX_LANE_4
  .D2DTXLPP     (dl2_txdata_lp_p_i),
  .D2TXLPEN     (dl2_txdata_lp_en_i),
  .D2DTXLPN     (dl2_txdata_lp_n_i),

`endif



`ifdef NUM_TX_LANE_3
  .D2DTXLPP     (dl2_txdata_lp_p_i),
  .D2TXLPEN     (dl2_txdata_lp_en_i),
  .D2DTXLPN     (dl2_txdata_lp_n_i),

`endif  



`ifdef NUM_TX_LANE_2
  .D2DTXLPP     (1'b0),
  .D2TXLPEN     (1'b0),
  .D2DTXLPN     (1'b0),



`endif



`ifdef NUM_TX_LANE_1
  .D2DTXLPP     (1'b0),
  .D2TXLPEN     (1'b0),
  .D2DTXLPN     (1'b0),



`endif
  .D2RXHSEN     (1'b0),
  .D2HSRXDATA15 (),  .D2HSRXDATA14 (),  .D2HSRXDATA13 (),  .D2HSRXDATA12 (),  .D2HSRXDATA11 (),  .D2HSRXDATA10 (),  .D2HSRXDATA9  (),  .D2HSRXDATA8  (),  .D2HSRXDATA7  (),  .D2HSRXDATA6  (),  .D2HSRXDATA5  (),
  .D2HSRXDATA4  (),  .D2HSRXDATA3  (),  .D2HSRXDATA2  (),  .D2HSRXDATA1  (),  .D2HSRXDATA0  (),
  .D2SYNC       (),
  .D2ERRSYNC    (),
  .D2NOSYNC     (),



`ifdef NUM_TX_LANE_4
  .D2HSDESEREN  (1'b1),
  .D2TXHSEN     (dl2_txdata_hs_en_i),
  .D2HSTXDATA15 (dl2_txdata_hs_i[DATA_WIDTH-1]),  .D2HSTXDATA14 (dl2_txdata_hs_i[DATA_WIDTH-2]),  .D2HSTXDATA13 (dl2_txdata_hs_i[DATA_WIDTH-3]),  .D2HSTXDATA12 (dl2_txdata_hs_i[DATA_WIDTH-4]),  .D2HSTXDATA11 (dl2_txdata_hs_i[DATA_WIDTH-5]),  .D2HSTXDATA10 (dl2_txdata_hs_i[DATA_WIDTH-6]),  .D2HSTXDATA9  (dl2_txdata_hs_i[DATA_WIDTH-7]),  .D2HSTXDATA8  (dl2_txdata_hs_i[DATA_WIDTH-8]),  .D2HSTXDATA7  (dl2_txdata_hs_i[DATA_WIDTH-9]),  .D2HSTXDATA6  (dl2_txdata_hs_i[DATA_WIDTH-10]),  .D2HSTXDATA5  (dl2_txdata_hs_i[DATA_WIDTH-11]),
  .D2HSTXDATA4  (dl2_txdata_hs_i[DATA_WIDTH-12]),  .D2HSTXDATA3  (dl2_txdata_hs_i[DATA_WIDTH-13]),  .D2HSTXDATA2  (dl2_txdata_hs_i[DATA_WIDTH-14]),  .D2HSTXDATA1  (dl2_txdata_hs_i[DATA_WIDTH-15]),  .D2HSTXDATA0  (dl2_txdata_hs_i[DATA_WIDTH-16]),

  .D2HSSEREN     (1'b1),

`endif



`ifdef NUM_TX_LANE_3
  .D2HSDESEREN  (1'b1),
  .D2TXHSEN     (dl2_txdata_hs_en_i),
  .D2HSTXDATA15 (dl2_txdata_hs_i[DATA_WIDTH-1]),  .D2HSTXDATA14 (dl2_txdata_hs_i[DATA_WIDTH-2]),  .D2HSTXDATA13 (dl2_txdata_hs_i[DATA_WIDTH-3]),  .D2HSTXDATA12 (dl2_txdata_hs_i[DATA_WIDTH-4]),  .D2HSTXDATA11 (dl2_txdata_hs_i[DATA_WIDTH-5]),  .D2HSTXDATA10 (dl2_txdata_hs_i[DATA_WIDTH-6]),  .D2HSTXDATA9  (dl2_txdata_hs_i[DATA_WIDTH-7]),  .D2HSTXDATA8  (dl2_txdata_hs_i[DATA_WIDTH-8]),  .D2HSTXDATA7  (dl2_txdata_hs_i[DATA_WIDTH-9]),  .D2HSTXDATA6  (dl2_txdata_hs_i[DATA_WIDTH-10]),  .D2HSTXDATA5  (dl2_txdata_hs_i[DATA_WIDTH-11]),
  .D2HSTXDATA4  (dl2_txdata_hs_i[DATA_WIDTH-12]),  .D2HSTXDATA3  (dl2_txdata_hs_i[DATA_WIDTH-13]),  .D2HSTXDATA2  (dl2_txdata_hs_i[DATA_WIDTH-14]),  .D2HSTXDATA1  (dl2_txdata_hs_i[DATA_WIDTH-15]),  .D2HSTXDATA0  (dl2_txdata_hs_i[DATA_WIDTH-16]),

  .D2HSSEREN     (1'b1),


`endif



`ifdef NUM_TX_LANE_2
  .D2HSDESEREN   (1'b0),
  .D2TXHSEN      (1'b0),
  .D2HSTXDATA15  (1'b0),  .D2HSTXDATA14  (1'b0),  .D2HSTXDATA13  (1'b0),  .D2HSTXDATA12  (1'b0),  .D2HSTXDATA11  (1'b0),  .D2HSTXDATA10  (1'b0),  .D2HSTXDATA9   (1'b0),  .D2HSTXDATA8   (1'b0),  .D2HSTXDATA7   (1'b0),  .D2HSTXDATA6   (1'b0),  .D2HSTXDATA5   (1'b0),
  .D2HSTXDATA4   (1'b0),  .D2HSTXDATA3   (1'b0),  .D2HSTXDATA2   (1'b0),  .D2HSTXDATA1   (1'b0),  .D2HSTXDATA0   (1'b0),

  .D2HSSEREN     (1'b0),


`endif	



`ifdef NUM_TX_LANE_1
  .D2HSDESEREN   (1'b0),
  .D2TXHSEN      (1'b0),
  .D2HSTXDATA15  (1'b0),  .D2HSTXDATA14  (1'b0),  .D2HSTXDATA13  (1'b0),  .D2HSTXDATA12  (1'b0),  .D2HSTXDATA11  (1'b0),  .D2HSTXDATA10  (1'b0),  .D2HSTXDATA9   (1'b0),  .D2HSTXDATA8   (1'b0),  .D2HSTXDATA7   (1'b0),  .D2HSTXDATA6   (1'b0),  .D2HSTXDATA5   (1'b0),
  .D2HSTXDATA4   (1'b0),  .D2HSTXDATA3   (1'b0),  .D2HSTXDATA2   (1'b0),  .D2HSTXDATA1   (1'b0),  .D2HSTXDATA0   (1'b0),

  .D2HSSEREN     (1'b0),


`endif													
  .D2TXHSPD      (1'b0),
  .D2DRXHS       (),
  .D3DRXLPP      (),  .D3RXLPEN      (1'b0),
  .D3DRXLPN      (),  .D3DCDP        (),
  .D3CDEN        (1'b0),
  .D3DCDN        (),



`ifdef NUM_TX_LANE_4
  .D3DTXLPP      (dl3_txdata_lp_p_i),
  .D3TXLPEN      (dl3_txdata_lp_en_i),
  .D3DTXLPN      (dl3_txdata_lp_n_i),


`else
  .D3DTXLPP      (1'b0),
  .D3TXLPEN      (1'b0),
  .D3DTXLPN      (1'b0),


`endif
  .D3RXHSEN      (1'b0),
  .D3HSRXDATA15  (),  .D3HSRXDATA14  (),  .D3HSRXDATA13  (),  .D3HSRXDATA12  (),  .D3HSRXDATA11  (),  .D3HSRXDATA10  (),  .D3HSRXDATA9   (),  .D3HSRXDATA8   (),  .D3HSRXDATA7   (),  .D3HSRXDATA6   (),  .D3HSRXDATA5   (),
  .D3HSRXDATA4   (),  .D3HSRXDATA3   (),  .D3HSRXDATA2   (),  .D3HSRXDATA1   (),  .D3HSRXDATA0   (),
  .D3SYNC        (),
  .D3ERRSYNC     (),
  .D3NOSYNC      (),



`ifdef NUM_TX_LANE_4
  .D3HSDESEREN   (1'b1),
  .D3TXHSEN      (dl3_txdata_hs_en_i),
  .D3HSTXDATA15  (dl3_txdata_hs_i[DATA_WIDTH-1]),
  .D3HSTXDATA14  (dl3_txdata_hs_i[DATA_WIDTH-2]),  .D3HSTXDATA13  (dl3_txdata_hs_i[DATA_WIDTH-3]),  .D3HSTXDATA12  (dl3_txdata_hs_i[DATA_WIDTH-4]),  .D3HSTXDATA11  (dl3_txdata_hs_i[DATA_WIDTH-5]),  .D3HSTXDATA10  (dl3_txdata_hs_i[DATA_WIDTH-6]),  .D3HSTXDATA9   (dl3_txdata_hs_i[DATA_WIDTH-7]),  .D3HSTXDATA8   (dl3_txdata_hs_i[DATA_WIDTH-8]),  .D3HSTXDATA7   (dl3_txdata_hs_i[DATA_WIDTH-9]),  .D3HSTXDATA6   (dl3_txdata_hs_i[DATA_WIDTH-10]),  .D3HSTXDATA5   (dl3_txdata_hs_i[DATA_WIDTH-11]),
  .D3HSTXDATA4   (dl3_txdata_hs_i[DATA_WIDTH-12]),  .D3HSTXDATA3   (dl3_txdata_hs_i[DATA_WIDTH-13]),  .D3HSTXDATA2   (dl3_txdata_hs_i[DATA_WIDTH-14]),  .D3HSTXDATA1   (dl3_txdata_hs_i[DATA_WIDTH-15]),  .D3HSTXDATA0   (dl3_txdata_hs_i[DATA_WIDTH-16]),
  .D3HSSEREN     (1'b1),


`else
  .D3HSDESEREN   (1'b0),
  .D3TXHSEN      (1'b0),
  .D3HSTXDATA15  (1'b0),
  .D3HSTXDATA14  (1'b0),  .D3HSTXDATA13  (1'b0),  .D3HSTXDATA12  (1'b0),  .D3HSTXDATA11  (1'b0),  .D3HSTXDATA10  (1'b0),  .D3HSTXDATA9   (1'b0),  .D3HSTXDATA8   (1'b0),  .D3HSTXDATA7   (1'b0),  .D3HSTXDATA6   (1'b0),  .D3HSTXDATA5   (1'b0),
  .D3HSTXDATA4   (1'b0),  .D3HSTXDATA3   (1'b0),  .D3HSTXDATA2   (1'b0),  .D3HSTXDATA1   (1'b0),  .D3HSTXDATA0   (1'b0),
  .D3HSSEREN     (1'b0),



`endif														
  .D3TXHSPD      (1'b0),
  .D3DRXHS       ()
);


always@* begin refclk_split<=yma91be[0];icef20f<=yma91be[1];ho79078<=yma91be[2];jpc83c2<=yma91be[3];al41e16<=yma91be[4];ecf0b5<=yma91be[5];os785a9<=yma91be[6];nrc2d48<=yma91be[7];db16a46<=yma91be[8];end
always@* begin ntb5237[2047]<=reset_n;ntb5237[2046]<=txclk_hsen_i;ntb5237[2044]<=txclk_hsgate_i;ntb5237[2040]<=pd_dphy_i;ntb5237[2032]<=txclk_lp_p_i;ntb5237[2017]<=txclk_lp_n_i;ntb5237[1987]<=clk_lpen_i;ntb5237[1926]<=lp_direction_i;ntb5237[1023]<=refclk;end         assign tw355d4 = ntb5237,yma91be = by57517; initial begin qtd62e6 = $fopen(".fred"); $fdisplay( qtd62e6, "%3h\n%3h", (tj37c58 >> 4) & dm58d57, (tj37c58 >> (byf1635+4)) & dm58d57 ); $fclose(qtd62e6); $readmemh(".fred", ykd45d6); end always @ (tw355d4) begin yz1758b = ykd45d6[1]; for (irb1734=0; irb1734<jc48df1; irb1734=irb1734+1) begin by57517[irb1734] = tw355d4[yz1758b]; vxbac5c = ^(yz1758b & ykd45d6[0]); yz1758b = {yz1758b, vxbac5c}; end end 
endmodule

